{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Template to create load balancer with pulbic, private subnet and NAT instance",
    "Parameters": {
        "VpcCidr": {
            "Description": "CIDR for VPC(172.16.0.0/16)",
            "Type": "String",
			"Default": "172.16.0.0/16"
        },
		"PublicSubnetACidr": {
            "Description": "CIDR for PublicSubnetA(172.16.0.0/24)",
            "Type": "String",
			"Default": "172.16.0.0/24"
        },
		
		"PrivateSubnetACidr": {
            "Description": "CIDR for PrivateSubnetA(172.16.1.0/24)",
            "Type": "String",
			"Default": "172.16.1.0/24"
        },
		
		"SSHLocation" : {
          "Description" : " The IP address range that can be used to SSH to the EC2 instances",
          "Type": "String",
          "MinLength": "9",
          "MaxLength": "18",
          "Default": "0.0.0.0/0",
          "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
          "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
		"KeyName": {
          "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
          "Type": "AWS::EC2::KeyPair::KeyName",
          "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
        },
		
		"InstanceType" : {
		  "Description" : "WebServer EC2 instance type",
		  "Type" : "String",
		  "Default" : "t2.micro",
		  "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge"],
		  "ConstraintDescription" : "must be a valid EC2 instance type."
		}
	 },
		"Mappings" : {
		
		"AWSInstanceType2Arch" : {
		  "t2.nano"     : { "Arch" : "HVM64"  },
		  "t2.micro"    : { "Arch" : "HVM64"  },
		  "t2.small"    : { "Arch" : "HVM64"  },
		  "t2.medium"   : { "Arch" : "HVM64"  },
		  "t2.large"    : { "Arch" : "HVM64"  },
		  "m3.medium"   : { "Arch" : "HVM64"  },
		  "m3.large"    : { "Arch" : "HVM64"  },
		  "m3.xlarge"   : { "Arch" : "HVM64"  },
		  "m3.2xlarge"  : { "Arch" : "HVM64"  },
		  "m4.large"    : { "Arch" : "HVM64"  },
		  "m4.xlarge"   : { "Arch" : "HVM64"  },
		  "m4.2xlarge"  : { "Arch" : "HVM64"  },
		  "m4.4xlarge"  : { "Arch" : "HVM64"  },
		  "m4.10xlarge" : { "Arch" : "HVM64"  }
		},

		"NatRegionMap" : {
			"us-east-1" : { "AMI" : "ami-184dc970" },
			"us-west-1" : { "AMI" : "ami-a98396ec" },
			"us-west-2" : { "AMI" : "ami-7707a10f" },
			"eu-west-1" : { "AMI" : "ami-14913f63" },
			"eu-central-1" : { "AMI" : "ami-ae380eb3" },
			"sa-east-1" : { "AMI" : "ami-8122969c" },
			"ap-southeast-1" : { "AMI" : "ami-6aa38238" },
			"ap-southeast-2" : { "AMI" : "ami-893f53b3" },
			"ap-northeast-1" : { "AMI" : "ami-27d6e626" }
		},
		"AWSRegionArch2AMI" : {
		  "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-6869aa05", "HVMG2" : "ami-1f12e965"},
		  "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-7172b611", "HVMG2" : "ami-5c9b6124"},
		  "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-31490d51", "HVMG2" : "ami-7291a112"},
		  "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-f9dd458a", "HVMG2" : "ami-b411c5cd"},
		  "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-886369ec", "HVMG2" : "NOT_SUPPORTED"},
		  "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-ea26ce85", "HVMG2" : "ami-be40f2d1"},
		  "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-374db956", "HVMG2" : "ami-3efd2c58"},
		  "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-2b408b45", "HVMG2" : "NOT_SUPPORTED"},
		  "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-a59b49c6", "HVMG2" : "ami-3e91ed5d"},
		  "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-dc361ebf", "HVMG2" : "ami-84a142e6"},
		  "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-ffbdd790", "HVMG2" : "ami-25ffbe4a"}
		}
    },
	
    "Resources": {

        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": { "Fn::Sub": "${VpcCidr}" },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "InstanceTenancy": "default",
                "Tags": [{"Key": "Name", "Value": "Indusface_Interview_VPC"}]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {"Tags": [ { "Key": "Name", "Value": "Indusface_Interview_Internet_Gateway"} ]}
        },
        "VPCGatewayAttachment": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": { "Ref": "VPC" },
                "InternetGatewayId": {"Ref": "InternetGateway" }}
        },
        "SubnetAPublic": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Select": [ 0,{"Fn::GetAZs": "" } ] },
                "CidrBlock": {"Fn::Sub": "${PublicSubnetACidr}"},
                "MapPublicIpOnLaunch": true,
                "VpcId": {"Ref": "VPC" },
				"Tags": [ { "Key": "Name","Value": "Indusface_Interview_Public_Subnet" }]
            }
        },
       
        "RouteTableAPublic": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "VPC" },
                "Tags": [{"Key": "Name","Value": "Indusface_Interview_Public_Route_Table" } ]
            }
        },
        
        "RouteTableAssociationAPublic": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "SubnetAPublic" },
                "RouteTableId": { "Ref": "RouteTableAPublic"}
            }
        },
        "RouteTablePublicAInternetRoute": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "VPCGatewayAttachment",
            "Properties": {
                "RouteTableId": {"Ref": "RouteTableAPublic" },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": { "Ref": "InternetGateway" }
            }
        },
       
		 "SubnetAPrivate": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "AvailabilityZone": { "Fn::Select": [ 0,{"Fn::GetAZs": "" } ] },
                "CidrBlock": {"Fn::Sub": "${PrivateSubnetACidr}"},
                "MapPublicIpOnLaunch": false,
                "VpcId": {"Ref": "VPC" },
				"Tags": [ { "Key": "Name","Value": "Indusface_Interview_Private_Subnet" }]
            }
        },
		"RouteTableAPrivate": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {"Ref": "VPC" },
                "Tags": [{"Key": "Name","Value": "Indusface_Interview_Private_Route_Table" } ]
            }
        },
        "RouteTableAssociationAPrivate": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": { "Ref": "SubnetAPrivate" },
                "RouteTableId": { "Ref": "RouteTableAPrivate"}
            }
        },
		"PrivateRouteA" : {
		   "Type" : "AWS::EC2::Route",
		   "Properties" : {
			 "RouteTableId" : { "Ref" : "RouteTableAPrivate" },
			 "DestinationCidrBlock" : "0.0.0.0/0",
			 "InstanceId" : { "Ref" : "NATHost" }
			}
		},
	
		"LoadBalancer": {
			  "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			  "Properties": {
				"LoadBalancerName": "LoadBalancer",
				"Listeners": [
				  {
					"InstancePort": 80,
					"InstanceProtocol": "HTTP",
					"LoadBalancerPort": 80,
					"Protocol": "HTTP"
				  }
				],
				"HealthCheck": {
				  "Target": "HTTP:80/",
				  "HealthyThreshold": "2",
				  "UnhealthyThreshold": "5",
				  "Interval": "240",
				  "Timeout": "60"
			   },
				"Scheme": "internet-facing",
				"SecurityGroups": [
				  {
					"Ref": "IndusfaceInterviewPublicSG"
				  }
				],
				"Subnets": [{ "Ref" : "SubnetAPublic" }]
			  }
			},
		"IndusfaceInterviewPublicSG" : {
			  "Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
			  "GroupDescription" : "Enable HTTP access via port 80 locked down to the ELB",
			  "SecurityGroupIngress" : [
              { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0"} ,
              { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"} ,
              { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : { "Ref" : "SSHLocation" }} ],
			   "SecurityGroupEgress" : [ { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"} ],
			  "VpcId" : { "Ref" : "VPC" },
			  "Tags" : [
			   { "Key" : "Name", "Value" : "Indusface_Interview_Public_SG" }
			 ]
		   }
        },

		"IndusfaceInterviewPrivateSG" : {
		 "Type" : "AWS::EC2::SecurityGroup",
		 "Properties" : {
		   "GroupDescription" : "Indusface_Interview_Private_SG",
		   "VpcId" : { "Ref" : "VPC" },
		   "SecurityGroupIngress" : [
              { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "172.16.0.0/0"} ,
              { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "172.16.0.0/0"} ,
              { "IpProtocol" : "tcp", "FromPort" : "22",  "ToPort" : "22",  "CidrIp" : "172.16.0.0/0"} ],
           "SecurityGroupEgress" : [
             { "IpProtocol" : "tcp", "FromPort" : "80",  "ToPort" : "80",  "CidrIp" : "0.0.0.0/0"} ,
             { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0"} ],
			"Tags" : [
			   { "Key" : "Name", "Value" : "Indusface_Interview_Private_SG" }
			 ]
		   }
		},
	    
		"NATHost" : {
		   "Type" : "AWS::EC2::Instance",
		   "Properties" : {
			 "InstanceType" : "t2.micro",
			 "SourceDestCheck" : "false",
			 "KeyName" : { "Ref" : "KeyName" },
			 "SourceDestCheck" : "false",
			  "ImageId" : { "Fn::FindInMap" : [ "NatRegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
			 "NetworkInterfaces" : [{
			
				"AssociatePublicIpAddress" : "true",
				"DeviceIndex" : "0",
				"DeleteOnTermination" : "true",
				"SubnetId" : { "Ref" : "SubnetAPublic" }
			 }],
			 "Tags" : [
				{ "Key" : "Name", "Value" : "Indusface_Interview_NAT_Instance" }
			 ]
		   }
		 },
		 "LoadBalanceEC2Instance" : {
		   "Type" : "AWS::EC2::Instance",
		   "Properties" : {
			 "InstanceType" : "t2.micro",
			 "SourceDestCheck" : "false",
			 "KeyName" : { "Ref" : "KeyName" },
			  "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
											  { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
			 "NetworkInterfaces" : [{
				"GroupSet" : [{ "Ref" : "IndusfaceInterviewPublicSG" }],
				"AssociatePublicIpAddress" : "true",
				"DeviceIndex" : "0",
				"DeleteOnTermination" : "true",
				"SubnetId" : { "Ref" : "SubnetAPublic" }
			 }],
			 "Tags" : [
				{ "Key" : "Name", "Value" : "Indusface_Interview_Load_balancer" }
			 ]
		   }
		 },
		 "PrivateEC2Instance" : {
		   "Type" : "AWS::EC2::Instance",
		   "Properties" : {
			 "InstanceType" : "t2.micro",
			 "SourceDestCheck" : "false",
			 "KeyName" : { "Ref" : "KeyName" },
			  "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
											  { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
			 "NetworkInterfaces" : [{
				"GroupSet" : [{ "Ref" : "IndusfaceInterviewPrivateSG" }],
				"AssociatePublicIpAddress" : "true",
				"DeviceIndex" : "0",
				"DeleteOnTermination" : "true",
				"SubnetId" : { "Ref" : "SubnetAPrivate" }
			 }],
			 "Tags" : [
				{ "Key" : "Name", "Value" : "Indusface_Interview_Web_Server" }
			 ]
		   }
		 },


      "EIPNAT": {
            "Type": "AWS::EC2::EIP"
        },

      "EIPLoadBalanceInstance": {
            "Type": "AWS::EC2::EIP"
        },
	   "IPAssoc" : {
		  "Type" : "AWS::EC2::EIPAssociation",
		  "Properties" : {
			"InstanceId" : { "Ref" : "NATHost" },
			"EIP" : { "Ref" : "EIPNAT" }
		  }
		},
	   "IPAssoc" : {
		  "Type" : "AWS::EC2::EIPAssociation",
		  "Properties" : {
			"InstanceId" : { "Ref" : "LoadBalanceEC2Instance" },
			"EIP" : { "Ref" : "EIPLoadBalanceInstance" }
		  }
		}
	  
    },
    "Outputs": {

        "StackName": {
            "Description": "Stack name",
            "Value": {"Fn::Sub": "${AWS::StackName}" }
        },
		"URL" : {
		  "Description" : "The URL of the website",
		  "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [
			  "LoadBalancer", "DNSName" ]}]]}
		}
        
        
    }
}
